<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="3.2" jmeter="3.3 r1808647">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Test Plan" enabled="true">
      <stringProp name="TestPlan.comments"></stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="Threadgroup" enabled="false">
        <collectionProp name="Arguments.arguments">
          <elementProp name="threadgroup.count" elementType="Argument">
            <stringProp name="Argument.name">threadgroup.count</stringProp>
            <stringProp name="Argument.value">${__P(threadgroup.count)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="threadgroup.rampup" elementType="Argument">
            <stringProp name="Argument.name">threadgroup.rampup</stringProp>
            <stringProp name="Argument.value">${__P(threadgroup.rampup)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="threadgroup.duration" elementType="Argument">
            <stringProp name="Argument.name">threadgroup.duration</stringProp>
            <stringProp name="Argument.value">${__P(threadgroup.duration)}</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
        <stringProp name="TestPlan.comments">Thread group for FM Planned Trip Creation</stringProp>
      </Arguments>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="RouteCreation" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">startnextloop</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" testname="Loop Controller" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">3</stringProp>
        <stringProp name="ThreadGroup.ramp_time">20</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">${threadgroup.duration}</stringProp>
        <stringProp name="ThreadGroup.delay"></stringProp>
        <longProp name="ThreadGroup.start_time">1538040250000</longProp>
        <longProp name="ThreadGroup.end_time">1538040250000</longProp>
      </ThreadGroup>
      <hashTree>
        <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
          <boolProp name="clearEachIteration">true</boolProp>
          <boolProp name="useExpires">true</boolProp>
        </CacheManager>
        <hashTree/>
        <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
          <collectionProp name="CookieManager.cookies"/>
          <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        </CookieManager>
        <hashTree/>
        <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="LoginCredentials" enabled="true">
          <collectionProp name="Arguments.arguments">
            <elementProp name="Email" elementType="Argument">
              <stringProp name="Argument.name">Email</stringProp>
              <stringProp name="Argument.value">FM@nio.io</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
            <elementProp name="Password" elementType="Argument">
              <stringProp name="Argument.name">Password</stringProp>
              <stringProp name="Argument.value">ESs^F=UI!&amp;8GMZcf543eVK</stringProp>
              <stringProp name="Argument.metadata">=</stringProp>
            </elementProp>
          </collectionProp>
        </Arguments>
        <hashTree/>
        <CSVDataSet guiclass="TestBeanGUI" testclass="CSVDataSet" testname="FMRoute" enabled="true">
          <stringProp name="filename">D:\Workspace\PerformanceDemo\src\test\resources\RouteCreation.csv</stringProp>
          <stringProp name="fileEncoding"></stringProp>
          <stringProp name="variableNames">label</stringProp>
          <boolProp name="ignoreFirstLine">false</boolProp>
          <stringProp name="delimiter">,</stringProp>
          <boolProp name="quotedData">false</boolProp>
          <boolProp name="recycle">true</boolProp>
          <boolProp name="stopThread">false</boolProp>
          <stringProp name="shareMode">shareMode.all</stringProp>
        </CSVDataSet>
        <hashTree/>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Login" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="796 /" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">veda-portal-dev.internal.nio.io</stringProp>
            <stringProp name="HTTPSampler.port">31080</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="800 /login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">${Email}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">${Password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">veda-portal-dev.internal.nio.io</stringProp>
            <stringProp name="HTTPSampler.port">31080</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://veda-portal-dev.internal.nio.io:31080/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://veda-portal-dev.internal.nio.io:31080</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="801 /home" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">veda-portal-dev.internal.nio.io</stringProp>
            <stringProp name="HTTPSampler.port">31080</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/home</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://veda-portal-dev.internal.nio.io:31080/</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Home" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="813 /sidebar" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="link" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">link</stringProp>
                  <stringProp name="Argument.value">FleetStream</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">veda-portal-dev.internal.nio.io</stringProp>
            <stringProp name="HTTPSampler.port">31080</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/sidebar</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://veda-portal-dev.internal.nio.io:31080/home</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="c_password" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">c_password</stringProp>
              <stringProp name="RegexExtractor.regex">password: &quot;(.*?)&quot;}</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">c_password NOT FOUND</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="825 /login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="email" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">email</stringProp>
                  <stringProp name="Argument.value">${Email}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">${c_password}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fleetstream-dev.internal.nio.io</stringProp>
            <stringProp name="HTTPSampler.port">31280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/login</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://veda-portal-dev.internal.nio.io:31080/sidebar?link=FleetStream</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://veda-portal-dev.internal.nio.io:31080</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="826 /dashboard" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fleetstream-dev.internal.nio.io</stringProp>
            <stringProp name="HTTPSampler.port">31280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/dashboard</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://veda-portal-dev.internal.nio.io:31080/sidebar?link=FleetStream</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">max-age=0</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Dashboard" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="877 /routesearch" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fleetstream-dev.internal.nio.io</stringProp>
            <stringProp name="HTTPSampler.port">31280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/routesearch</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://fleetstream-dev.internal.nio.io:31280/dashboard</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="971 /getroutes" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="locations" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">locations</stringProp>
                  <stringProp name="Argument.value">-121.96178116697902,37.34789112902037;-121.9340761815877,37.362704242986666</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="max_routes" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">max_routes</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="route_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">route_type</stringProp>
                  <stringProp name="Argument.value">less_turn</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fleetstream-dev.internal.nio.io</stringProp>
            <stringProp name="HTTPSampler.port">31280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/getroutes</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://fleetstream-dev.internal.nio.io:31280/routesearch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Addroute" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1011 /postroute" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="label" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">label</stringProp>
                  <stringProp name="Argument.value">${label}${__time()}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="backlog" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">backlog</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="priority" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">priority</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sensor" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sensor</stringProp>
                  <stringProp name="Argument.value">[&quot;5adebc334890a4000c651307&quot;]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="vehicle" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vehicle</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="note" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">note</stringProp>
                  <stringProp name="Argument.value">QANotes</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="routedata" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">routedata</stringProp>
                  <stringProp name="Argument.value">{&quot;type&quot;:&quot;Feature&quot;,&quot;properties&quot;:{&quot;start&quot;:&quot;[-121.8863286,37.3382082]&quot;,&quot;end&quot;:&quot;[-121.9678402,37.4028901]&quot;,&quot;durationMin&quot;:18.183332443237305,&quot;length&quot;:&quot;7.9 mi / 13 km&quot;,&quot;name&quot;:&quot;N 5th St&quot;,&quot;maneuvers&quot;:[{&quot;instructions&quot;:&quot;Head on N 5th St&quot;,&quot;polyline&quot;:&quot;yr{bFp||fV&quot;,&quot;distance_mi&quot;:0,&quot;duration_min&quot;:0,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Head southwest on E Santa Clara St toward S 4th StPass by Starbucks (on the right)&quot;,&quot;polyline&quot;:&quot;yr{bFp||fVXr@BFBHfAtCZx@Xt@n@dBj@xAr@lBHVd@nA^`AXv@x@xBRh@HRp@fBf@rAb@hAt@pBd@rAd@nAd@nA&quot;,&quot;distance_mi&quot;:0.5331363081932068,&quot;duration_min&quot;:3.933333396911621,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Head north on Notre Dame Ave toward Carlysle St&quot;,&quot;polyline&quot;:&quot;azzbFpp~fVS?I@o@d@gCfBy@j@sBtAoBrA[Tg@\\WVa@V&quot;,&quot;distance_mi&quot;:0.251655250787735,&quot;duration_min&quot;:1.2333333492279053,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Head northwest toward W Julian St&quot;,&quot;polyline&quot;:&quot;sm{bFz~~fVIDWRSPo@f@IFy@v@qAjAa@^EBEDm@h@EFEDSPQLk@b@eAp@CBCBCB?DAJ&quot;,&quot;distance_mi&quot;:0.22369356453418732,&quot;duration_min&quot;:0.5,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Merge onto CA-87 N&quot;,&quot;polyline&quot;:&quot;}}{bFpm_gVQJ&quot;,&quot;distance_mi&quot;:0.006835081148892641,&quot;duration_min&quot;:0.01666666753590107,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Head northwest on CA-87 N&quot;,&quot;polyline&quot;:&quot;o~{bF|m_gVID{DfC_An@gAr@{A`AeAj@o@ZWL_@L_@POF_A\\cA^g@PMDy@^a@Re@Xk@\\QJOLa@XYVEDg@d@u@r@[\\MPOPILo@z@S\\KPCBU^EHKRQZMXUf@INYr@Sf@e@nASf@M^Wj@OVMZILk@~@{@pAMNo@v@q@p@]ZSPQNWNKFQLWP[TSNg@Xa@RuElBeDxAoAl@_@Nm@ZiAj@yCdBYRcBfAaHtEwBvAw@d@a@TkAv@eAt@{A`AgAt@uA~@gAt@aAp@_BdAMJe@^QJo@b@aDxBuA~@k@`@WPWPaAr@k@`@aBhAa@Zi@`@e@^[Xe@b@[X[Z_@^STOPOR_@d@m@v@c@l@QXc@p@k@bAwB`EqAjCaAfBaAdB_@t@u@vAm@jAS^SVMNSTOPURUTUPYTQLa@VUJa@RWH_@Je@HqDr@&quot;,&quot;distance_mi&quot;:2.7271974086761475,&quot;duration_min&quot;:2.5166666507720947,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Head north on CA-87 N&quot;,&quot;polyline&quot;:&quot;sebcFf{dgViCd@&quot;,&quot;distance_mi&quot;:0.049088310450315475,&quot;duration_min&quot;:0.05000000074505806,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Take exit 9B on the left for US-101 N toward San FranciscoDestination will be on the left&quot;,&quot;polyline&quot;:&quot;}ibcFl|dgVsA\\k@Vc@Tc@ZEDC@[ZEFIJA?CDIJ_@j@Uf@Un@Sr@Op@AJ&quot;,&quot;distance_mi&quot;:0.18578992784023285,&quot;duration_min&quot;:0.20000000298023224,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Head west&quot;,&quot;polyline&quot;:&quot;}ubcFtiegVET&quot;,&quot;distance_mi&quot;:0.006835081148892641,&quot;duration_min&quot;:0,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Keep left, follow signs for US 101 N/San Francisco and merge ontoUS-101 N&quot;,&quot;polyline&quot;:&quot;cvbcFjjegVE~@IdAIjAM|AAFKnAOpAOrAIb@GZALCPIn@AB@D?DBFBHCNIl@&quot;,&quot;distance_mi&quot;:0.22493630647659302,&quot;duration_min&quot;:0.23333333432674408,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Head west on US-101 N&quot;,&quot;polyline&quot;:&quot;azbcFhcfgVa@xC[nCyCnVi@pFUzBKx@?FABKx@wAvLK`AmAhK[`C{@vHKt@?@E^AR_AdIu@lG{@zGy@vFi@nDsChOw@|DG\\I`@G\\G\\I^G^I\\G^I\\G^I\\G^Q|@Kf@Mt@I\\G^I\\ETKh@G\\[|A]jBUlASbACLABY|A[bBm@zCa@rBIf@}@xEI\\YzAERCNOz@I\\Mp@Kh@CJWpAYzAY~AI\\G\\I^G^YtA&quot;,&quot;distance_mi&quot;:2.1953036785125732,&quot;duration_min&quot;:2.049999952316284,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Head west on US-101 N&quot;,&quot;polyline&quot;:&quot;gsdcFhrmgVa@vB&quot;,&quot;distance_mi&quot;:0.03479677438735962,&quot;duration_min&quot;:0.03333333507180214,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Take exit 393 for Great America Pkwy&quot;,&quot;polyline&quot;:&quot;itdcF`vmgV]h@?@ABOl@Ux@Qn@Oh@EPIPGPIRIPGLMTILGLc@h@EDKLSTEDc@`@a@b@]ZONKFA@&quot;,&quot;distance_mi&quot;:0.22182944416999817,&quot;duration_min&quot;:0.3166666626930237,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Head northwest toward Great America Pkwy&quot;,&quot;polyline&quot;:&quot;w`ecFdingVA?GHEFIHKNGHQTEFIHEDEBEBE@E@E@C@C?G@I?G?C?GAi@IMCUEE?I?C@ID&quot;,&quot;distance_mi&quot;:0.106254443526268,&quot;duration_min&quot;:0.18333333730697632,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Merge onto Great America PkwyDestination will be on the right&quot;,&quot;polyline&quot;:&quot;eiecFllngVOEG?&quot;,&quot;distance_mi&quot;:0.008699193596839905,&quot;duration_min&quot;:0.01666666753590107,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Head north on Great America Pkwy toward Hichborn DrDestination will be on the left&quot;,&quot;polyline&quot;:&quot;}iecFflngVWEYCe@Ew@E{AAaA?qABsAFg@Dg@F_@Fe@HQD{@R{@Tm@Rk@RSHc@PIDKFWJUJE@}@^UHqAb@MDkAZsAXc@H[FmARe@HiAJ]FQ@i@DuBJY@Q?}@@oA?i@AwAEoAEc@AuCMWC{AEe@Ce@Ak@Ak@AmAAiA?cCAsB?&quot;,&quot;distance_mi&quot;:1.0675153732299805,&quot;duration_min&quot;:2.4833333492279053,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Head north on Great America Pkwy toward Tasman Dr&quot;,&quot;polyline&quot;:&quot;}hhcFfwngVC?&quot;,&quot;distance_mi&quot;:0.0012427419424057007,&quot;duration_min&quot;:0,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Turn right at the 1st cross street onto Tasman Dr&quot;,&quot;polyline&quot;:&quot;aihcFfwngVC{CIuHCcAA]C_@Ce@E_@I{@McAO}@AKUoAEUEUG[?AAAG_@U_AYgAKc@Uw@Y_A[aAQe@oAkD&quot;,&quot;distance_mi&quot;:0.47099921107292175,&quot;duration_min&quot;:1.399999976158142,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Head northwest on Centennial Blvd toward Tasman Dr&quot;,&quot;polyline&quot;:&quot;kthcFndmgVKJGFMNkDfC&quot;,&quot;distance_mi&quot;:0.08574920147657394,&quot;duration_min&quot;:0.36666667461395264,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Turn right onto Stars and Stripes Dr&quot;,&quot;polyline&quot;:&quot;yzhcFzimgVEO&quot;,&quot;distance_mi&quot;:0.004970967769622803,&quot;duration_min&quot;:0.05000000074505806,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Head northeast on Stars and Stripes DrDestination will be on the right&quot;,&quot;polyline&quot;:&quot;_{hcFjimgVW{@K]oAcEY_AKe@?EEOAOAK?U@W?C@MBOBI@KFMDKFOLQT[JKNMDGLMJKJINKPM|@k@tAy@^Uv@a@&quot;,&quot;distance_mi&quot;:0.33056938648223877,&quot;duration_min&quot;:1.2166666984558105,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Head southeast on Stars and Stripes Dr toward 4949 CentennialTemporary Access&quot;,&quot;polyline&quot;:&quot;eshcFxmlgVDCn@c@lEgCXQ&quot;,&quot;distance_mi&quot;:0.11184678226709366,&quot;duration_min&quot;:0.5833333134651184,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Head northwest toward Bill Walsh Way&quot;,&quot;polyline&quot;:&quot;gjhcFvglgVYP&quot;,&quot;distance_mi&quot;:0.009941935539245605,&quot;duration_min&quot;:0.03333333507180214,&quot;is_autonomous&quot;:false},{&quot;instructions&quot;:&quot;Turn left onto Bill Walsh WayRestricted usage roadDestination will be on the left&quot;,&quot;polyline&quot;:&quot;akhcFhhlgVxEtN&quot;,&quot;distance_mi&quot;:0.1565854847431183,&quot;duration_min&quot;:0.7666666507720947,&quot;is_autonomous&quot;:false}],&quot;intent&quot;:&quot;OFF&quot;,&quot;note&quot;:&quot;QANotes&quot;},&quot;geometry&quot;:{&quot;type&quot;:&quot;LineString&quot;,&quot;coordinates&quot;:[[-121.88633,37.33821],[-121.89155,37.33572],[-121.89343,37.33482],[-121.89425,37.33444],[-121.89465,37.33425],[-121.89465,37.33435],[-121.89466,37.3344],[-121.89485,37.33464],[-121.89559,37.33561],[-121.8967,37.33709],[-121.89682,37.33721],[-121.89694,37.33738],[-121.89707,37.33755],[-121.89736,37.33789],[-121.89768,37.33823],[-121.89827,37.33887],[-121.89864,37.33926],[-121.89916,37.33994],[-121.8992,37.33998],[-121.89929,37.33999],[-121.9003,37.34139],[-121.90089,37.34221],[-121.90125,37.3428],[-121.90139,37.34308],[-121.90152,37.34332],[-121.90195,37.34425],[-121.90221,37.34471],[-121.90249,37.34512],[-121.90287,37.34559],[-121.9035,37.34623],[-121.90405,37.34667],[-121.90476,37.34714],[-121.90543,37.3475],[-121.90639,37.34796],[-121.90694,37.34828],[-121.90767,37.3488],[-121.90803,37.34911],[-121.90859,37.3497],[-121.90887,37.35009],[-121.90906,37.35033],[-121.90929,37.3507],[-121.91029,37.3526],[-121.9106,37.35316],[-121.91096,37.35376],[-121.91157,37.35466],[-121.913,37.35661],[-121.91363,37.35749],[-121.91462,37.35885],[-121.91573,37.36033],[-121.91636,37.36116],[-121.91764,37.36286],[-121.91825,37.36365],[-121.91876,37.36431],[-121.91909,37.36471],[-121.91967,37.36532],[-121.92013,37.36574],[-121.92096,37.3664],[-121.92155,37.3668],[-121.92322,37.36781],[-121.92496,37.3689],[-121.9255,37.36923],[-121.9257,37.3694],[-121.92611,37.3698],[-121.92631,37.37004],[-121.9265,37.3703],[-121.92666,37.37058],[-121.92677,37.37086],[-121.92708,37.37194],[-121.92727,37.37263],[-121.92742,37.37305],[-121.92765,37.37345],[-121.92782,37.37366],[-121.92807,37.3739],[-121.92838,37.37414],[-121.92882,37.37436],[-121.92933,37.37454],[-121.9295,37.37458],[-121.93017,37.37466],[-121.93146,37.37485],[-121.93229,37.37501],[-121.93261,37.3751],[-121.93303,37.37519],[-121.93318,37.37514],[-121.93349,37.37521],[-121.93498,37.37552],[-121.93874,37.37629],[-121.93995,37.3765],[-121.94086,37.37667],[-121.94121,37.37674],[-121.94836,37.37816],[-121.95009,37.37849],[-121.95286,37.37906],[-121.95498,37.37956],[-121.95854,37.38058],[-121.95916,37.38075],[-121.95979,37.38093],[-121.96134,37.38138],[-121.96352,37.382],[-121.96906,37.38359],[-121.97114,37.38419],[-121.97173,37.38436],[-121.97233,37.38453],[-121.97254,37.38468],[-121.97257,37.38469],[-121.97309,37.38488],[-121.97372,37.38513],[-121.97407,37.38531],[-121.97425,37.38543],[-121.97453,37.38565],[-121.97477,37.38587],[-121.97534,37.38645],[-121.97544,37.38657],[-121.97566,37.38675],[-121.97589,37.38695],[-121.97595,37.38707],[-121.97598,37.38718],[-121.97597,37.38733],[-121.97587,37.38775],[-121.97588,37.38782],[-121.97591,37.38787],[-121.97588,37.38795],[-121.97588,37.38799],[-121.97583,37.38824],[-121.97577,37.38871],[-121.97576,37.3895],[-121.97582,37.39033],[-121.97589,37.39073],[-121.97598,37.39108],[-121.97611,37.39147],[-121.97632,37.392],[-121.97647,37.39232],[-121.97669,37.39273],[-121.97697,37.39329],[-121.97718,37.39377],[-121.97745,37.39457],[-121.97769,37.39547],[-121.97783,37.39629],[-121.9779,37.39701],[-121.97791,37.39741],[-121.9779,37.39802],[-121.97784,37.39886],[-121.97771,37.40037],[-121.97766,37.40119],[-121.97764,37.40319],[-121.97764,37.40321],[-121.97686,37.40323],[-121.97497,37.4033],[-121.97431,37.40338],[-121.97367,37.4035],[-121.9733,37.40359],[-121.97254,37.4038],[-121.97204,37.40396],[-121.9709,37.40439],[-121.97038,37.40462],[-121.96952,37.40502],[-121.96958,37.40508],[-121.9697,37.40519],[-121.97038,37.40605],[-121.9703,37.40608],[-121.96985,37.40626],[-121.96855,37.40679],[-121.96817,37.40689],[-121.96786,37.40689],[-121.9676,37.40683],[-121.96747,37.40676],[-121.9673,37.40665],[-121.96699,37.40637],[-121.96675,37.4061],[-121.96606,37.40511],[-121.96587,37.4048],[-121.96501,37.40353],[-121.96492,37.4034],[-121.96501,37.40353],[-121.96752,37.40244]]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tags" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tags</stringProp>
                  <stringProp name="Argument.value">[null]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="user[email]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[email]</stringProp>
                  <stringProp name="Argument.value">FM@nio.io</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="user[id]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[id]</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="managers" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">managers</stringProp>
                  <stringProp name="Argument.value">[]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">fleetstream-dev.internal.nio.io</stringProp>
            <stringProp name="HTTPSampler.port">31280</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding">UTF-8</stringProp>
            <stringProp name="HTTPSampler.path">/postroute</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://fleetstream-dev.internal.nio.io:31280/routesearch</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Origin" elementType="Header">
                  <stringProp name="Header.name">Origin</stringProp>
                  <stringProp name="Header.value">http://fleetstream-dev.internal.nio.io:31280</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <ResponseAssertion guiclass="AssertionGui" testclass="ResponseAssertion" testname="Response Assertion" enabled="true">
              <collectionProp name="Asserion.test_strings">
                <stringProp name="-1867169789">success</stringProp>
              </collectionProp>
              <stringProp name="Assertion.custom_message"></stringProp>
              <stringProp name="Assertion.test_field">Assertion.response_data</stringProp>
              <boolProp name="Assertion.assume_success">false</boolProp>
              <intProp name="Assertion.test_type">16</intProp>
            </ResponseAssertion>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Logout" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="1013 /logout" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">veda-portal-dev.internal.nio.io</stringProp>
            <stringProp name="HTTPSampler.port">31080</stringProp>
            <stringProp name="HTTPSampler.protocol">http</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">/logout</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
            <stringProp name="TestPlan.comments">Detected the start of a redirect chain</stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header Manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Referer" elementType="Header">
                  <stringProp name="Header.name">Referer</stringProp>
                  <stringProp name="Header.value">http://veda-portal-dev.internal.nio.io:31080/sidebar?link=FleetStream</stringProp>
                </elementProp>
                <elementProp name="Accept-Language" elementType="Header">
                  <stringProp name="Header.name">Accept-Language</stringProp>
                  <stringProp name="Header.value">en-US,en;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept-Encoding" elementType="Header">
                  <stringProp name="Header.name">Accept-Encoding</stringProp>
                  <stringProp name="Header.value">gzip, deflate</stringProp>
                </elementProp>
                <elementProp name="User-Agent" elementType="Header">
                  <stringProp name="Header.name">User-Agent</stringProp>
                  <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
    <WorkBench guiclass="WorkBenchGui" testclass="WorkBench" testname="WorkBench" enabled="true">
      <boolProp name="WorkBench.save">true</boolProp>
    </WorkBench>
    <hashTree/>
  </hashTree>
</jmeterTestPlan>
